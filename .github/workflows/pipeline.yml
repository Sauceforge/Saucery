name: Build Pipeline

on: [push, pull_request]

#on:
#  push:
#    branches:
#      - master

env:
  SOLN_FILE: Saucery.sln                          # full path to your solution file
  UT_DIR: UnitTests
  UT_PROJECT: UnitTests/UnitTests.csproj          # full path to your unit test project file
  SAUCE_USER_NAME: ${{ secrets.SAUCE_USER_NAME }}
  SAUCE_API_KEY: ${{ secrets.SAUCE_API_KEY }}
  CONFIG: Release
  APP_PACKAGE_PATH: 'published'                   # set this to the path to your web app project, defaults to the repository root
  COVERAGE_FORMAT: opencover
  COVERAGE_FILENAME: opencover.xml
  COVERAGE_THRESHOLD: 20

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        # Check for latest at link at .NET 5 download page (https://dotnet.microsoft.com/download/dotnet/5.0)
        dotnet-version: '5.0.401'
    
    - name: Compile solution
      run: dotnet build -c ${{ env.CONFIG }}

    ## Run code analysis for all projects/solutions, such that code analysis violations break the build.
    #- name: Run .NET Code Analysis
    #  uses: dotnet/code-analysis@v1
    #  id: code-analysis
    #  with:
    #    build-breaking: true

    - name: Run Unit Tests
      uses: b3b00/coverlet-action@1.1.3
      with:
        testProject: ${{ env.UT_PROJECT }}
        output: ${{ env.COVERAGE_FILENAME }}
        outputFormat: ${{ env.COVERAGE_FORMAT }}
        threshold: ${{ env.COVERAGE_THRESHOLD }}
        excludes: '[program]*,[UnitTests]Tests.*,[Merlin]*,[Saucery]Saucery.Selenium.*,[Saucery]Saucery.DataSources.*'

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
      with:
        reports: ${{ env.UT_DIR }}/${{ env.COVERAGE_FILENAME }} # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
        reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: CoverageReport # Artifact name        
        path: coveragereport # Directory containing files to upload
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Bump version and push tag
      if: ${{ github.ref == 'ref/head/develop' && success() }}
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        